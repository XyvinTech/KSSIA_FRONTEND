name: Deploy React App to EC2

on:
  push:
    branches:
      - stagging

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      # Step 3: Install dependencies and build the project
      - name: Install Dependencies and Build
        env:
          VITE_APP_AWS_S3_BUCKET: ${{ secrets.VITE_APP_AWS_S3_BUCKET }}
          VITE_APP_AWS_REGION: ${{ secrets.VITE_APP_AWS_REGION }}
          VITE_APP_AWS_ACCESS_KEY_ID: ${{ secrets.VITE_APP_AWS_ACCESS_KEY_ID }}
          VITE_APP_AWS_SECRET_ACCESS_KEY: ${{ secrets.VITE_APP_AWS_SECRET_ACCESS_KEY }}
          VITE_APP_API_STAGE_URL: ${{ secrets.VITE_APP_API_STAGE_URL }}
        run: |
          npm ci
          npm run build

      # Step 4: Rename dist folder for deployment
      - name: Rename dist to kssia-frontend
        run: mv ./dist ./kssia-frontend

      # Step 5: SSH into EC2 and prepare for deployment
      - name: Clean Temporary Directory on EC2
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Remove old temp directory if it exists
            rm -rf ~/deploy-temp
            mkdir ~/deploy-temp

      # Step 6: Copy built files to EC2
      - name: Copy Files to EC2
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          source: ./kssia-frontend/
          target: ~/deploy-temp/

      # Step 7: Deploy files and restart Nginx
      - name: Deploy on EC2
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Create deployment directory if it does not exist
            sudo mkdir -p /var/www/html/kssia-frontend
            sudo chown -R www-data:www-data /var/www/html/kssia-frontend
            sudo chmod -R 755 /var/www/html/kssia-frontend

            # Remove old deployment
            sudo rm -rf /var/www/html/kssia-frontend/*

            # Move new files to the deployment directory
            sudo mv ~/deploy-temp/* /var/www/html/kssia-frontend/

            # Remove temporary deployment folder
            sudo rm -rf ~/deploy-temp

            # Restart NGINX to apply changes
            sudo systemctl restart nginx
